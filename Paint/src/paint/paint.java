/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paint;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jeronimovicente
 */
public class paint extends javax.swing.JFrame {
   private BufferedImage buffer;       
   private String herramientaActual;   
    private Color colorActual = Color.BLACK; 
    private Point startPoint = null;    
    private Point anterior = null;       
    private Random random = new Random();
    private List<BufferedImage> deshacer = new ArrayList<>();
    private List<BufferedImage> rehacer = new ArrayList<>();
    private int grosorPincel = 5; 


    
    /**
     * Creates new form paint
     */
    public paint() {
        initComponents();
        
        buffer = new BufferedImage(
                panelLienzo.getWidth(),
                panelLienzo.getHeight(),
                BufferedImage.TYPE_INT_RGB);
        
        limpiarLienzo();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpTamañoPincel = new javax.swing.JPopupMenu();
        jToolBar = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        btnDeshacer = new javax.swing.JButton();
        btnManual = new javax.swing.JButton();
        panelLienzo = new javax.swing.JPanel();
        panelHerramientas = new javax.swing.JPanel();
        btnSeleccColor = new javax.swing.JButton();
        btnClonarColor = new javax.swing.JButton();
        btnDibujoLibre = new javax.swing.JButton();
        btnLineasRectas = new javax.swing.JButton();
        btnAerografo = new javax.swing.JButton();
        btnCuadrado = new javax.swing.JButton();
        btnOvalo = new javax.swing.JButton();
        lblPosicion = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        menuItemNuevo = new javax.swing.JMenuItem();
        menuItemExportar = new javax.swing.JMenuItem();
        menuItemSalir = new javax.swing.JMenuItem();
        jMenuEdicion = new javax.swing.JMenu();
        menuItemDeshacer = new javax.swing.JMenuItem();
        menuItemRehacer = new javax.swing.JMenuItem();
        jMenuAyuda = new javax.swing.JMenu();
        menuItemAcercade = new javax.swing.JMenuItem();
        menuItemManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar.setRollover(true);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/nuevo.png"))); // NOI18N
        btnNuevo.setToolTipText("Crea un nuevo archivo.");
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar.add(btnNuevo);

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/exportar.png"))); // NOI18N
        btnExportar.setToolTipText("Exporta el archivo.");
        btnExportar.setFocusable(false);
        btnExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jToolBar.add(btnExportar);

        btnDeshacer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/deshacer.png"))); // NOI18N
        btnDeshacer.setToolTipText("Deshace cambios realizados.");
        btnDeshacer.setFocusable(false);
        btnDeshacer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeshacer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshacerActionPerformed(evt);
            }
        });
        jToolBar.add(btnDeshacer);

        btnManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ayud.png"))); // NOI18N
        btnManual.setToolTipText("Info y ayuda de la aplicación.");
        btnManual.setFocusable(false);
        btnManual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnManual.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManualActionPerformed(evt);
            }
        });
        jToolBar.add(btnManual);

        panelLienzo.setBackground(new java.awt.Color(255, 255, 255));
        panelLienzo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelLienzo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelLienzoMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                panelLienzoMouseMoved(evt);
            }
        });
        panelLienzo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelLienzoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelLienzoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelLienzoLayout = new javax.swing.GroupLayout(panelLienzo);
        panelLienzo.setLayout(panelLienzoLayout);
        panelLienzoLayout.setHorizontalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelLienzoLayout.setVerticalGroup(
            panelLienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panelHerramientas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSeleccColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/elegirColor.png"))); // NOI18N
        btnSeleccColor.setToolTipText("Elegir un color");
        btnSeleccColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccColorActionPerformed(evt);
            }
        });

        btnClonarColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/clonarColor(1).png"))); // NOI18N
        btnClonarColor.setToolTipText("Para clonar el color que clickes.");
        btnClonarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClonarColorActionPerformed(evt);
            }
        });

        btnDibujoLibre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/dibujoLibre(1).png"))); // NOI18N
        btnDibujoLibre.setToolTipText("Dibujo libre.");
        btnDibujoLibre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDibujoLibreMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDibujoLibreMouseReleased(evt);
            }
        });
        btnDibujoLibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDibujoLibreActionPerformed(evt);
            }
        });

        btnLineasRectas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/lapizLineasRectas(1).png"))); // NOI18N
        btnLineasRectas.setToolTipText("Sirve para trazar lineas rectas.");
        btnLineasRectas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineasRectasActionPerformed(evt);
            }
        });

        btnAerografo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/aerografo(1).png"))); // NOI18N
        btnAerografo.setToolTipText("Para dibujar como \"spray\".");
        btnAerografo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAerografoActionPerformed(evt);
            }
        });

        btnCuadrado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/cuadrado(1).png"))); // NOI18N
        btnCuadrado.setToolTipText("Para realizar un cuadrado");
        btnCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuadradoActionPerformed(evt);
            }
        });

        btnOvalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ovalo(1).png"))); // NOI18N
        btnOvalo.setToolTipText("Para realizar un óvalo");
        btnOvalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOvaloActionPerformed(evt);
            }
        });

        lblPosicion.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        lblPosicion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosicion.setText("pos");
        lblPosicion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelHerramientasLayout = new javax.swing.GroupLayout(panelHerramientas);
        panelHerramientas.setLayout(panelHerramientasLayout);
        panelHerramientasLayout.setHorizontalGroup(
            panelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPosicion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelHerramientasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSeleccColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClonarColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDibujoLibre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLineasRectas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAerografo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCuadrado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOvalo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelHerramientasLayout.setVerticalGroup(
            panelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSeleccColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClonarColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDibujoLibre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLineasRectas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAerografo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCuadrado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOvalo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addComponent(lblPosicion, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuArchivo.setText("Archivo");

        menuItemNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemNuevo.setText("Nuevo");
        menuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNuevoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(menuItemNuevo);

        menuItemExportar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemExportar.setText("Exportar");
        menuItemExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExportarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(menuItemExportar);

        menuItemSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemSalir.setText("Salir");
        menuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(menuItemSalir);

        jMenuBar.add(jMenuArchivo);

        jMenuEdicion.setText("Edicion");

        menuItemDeshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemDeshacer.setText("Deshacer");
        menuItemDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDeshacerActionPerformed(evt);
            }
        });
        jMenuEdicion.add(menuItemDeshacer);

        menuItemRehacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemRehacer.setText("Rehacer");
        menuItemRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRehacerActionPerformed(evt);
            }
        });
        jMenuEdicion.add(menuItemRehacer);

        jMenuBar.add(jMenuEdicion);

        jMenuAyuda.setText("Ayuda");

        menuItemAcercade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemAcercade.setText("Acerca de");
        menuItemAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAcercadeActionPerformed(evt);
            }
        });
        jMenuAyuda.add(menuItemAcercade);

        menuItemManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuItemManual.setText("Manual");
        menuItemManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemManualActionPerformed(evt);
            }
        });
        jMenuAyuda.add(menuItemManual);

        jMenuBar.add(jMenuAyuda);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelHerramientas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelHerramientas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelLienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAcercadeActionPerformed
 JOptionPane.showMessageDialog(this, 
            "Paint BETA v0.5\n\n"
            + "Esta aplicación permite dibujar a su antojo,\n"
            + "incluyendo figuras geométricas, pinceles, etc.\n\n"
            + "Desarrollado por Jerónimo Vicente.", 
            "Acerca de",
            JOptionPane.INFORMATION_MESSAGE
        );
    }//GEN-LAST:event_menuItemAcercadeActionPerformed

    private void btnAerografoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAerografoActionPerformed
         herramientaActual = "aerografo";
    }//GEN-LAST:event_btnAerografoActionPerformed

    private void btnCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuadradoActionPerformed
       herramientaActual = "rectangulo";
    }//GEN-LAST:event_btnCuadradoActionPerformed

    private void btnOvaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOvaloActionPerformed
       herramientaActual = "ovalo";
    }//GEN-LAST:event_btnOvaloActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      salirAplicacion();
    }//GEN-LAST:event_formWindowClosing

    private void menuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirActionPerformed
        salirAplicacion();
    }//GEN-LAST:event_menuItemSalirActionPerformed

    private void menuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNuevoActionPerformed
        limpiarLienzo();
    }//GEN-LAST:event_menuItemNuevoActionPerformed

    private void menuItemExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExportarActionPerformed
        exportarDibujo();
    }//GEN-LAST:event_menuItemExportarActionPerformed

    private void menuItemDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDeshacerActionPerformed
        if (!deshacer.isEmpty()) {
        rehacer.add(clonarImagen(buffer));

        buffer = deshacer.remove(deshacer.size() - 1);
        actualizarLienzo();
    }
    }//GEN-LAST:event_menuItemDeshacerActionPerformed

    private void menuItemRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRehacerActionPerformed
       if (!rehacer.isEmpty()) {
        deshacer.add(clonarImagen(buffer));

        buffer = rehacer.remove(rehacer.size() - 1);
        actualizarLienzo();
    }
    }//GEN-LAST:event_menuItemRehacerActionPerformed

    private void menuItemManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemManualActionPerformed
       mostrarManual();
    }//GEN-LAST:event_menuItemManualActionPerformed

    private void btnSeleccColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccColorActionPerformed
         Color c = JColorChooser.showDialog(this, "Elige un color", colorActual);
        if (c != null) {
            colorActual = c;
        }
    }//GEN-LAST:event_btnSeleccColorActionPerformed

    private void btnClonarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClonarColorActionPerformed
         herramientaActual = "clonarColor";
    }//GEN-LAST:event_btnClonarColorActionPerformed

    private void btnDibujoLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDibujoLibreActionPerformed
        herramientaActual = "dibujoLibre";
    }//GEN-LAST:event_btnDibujoLibreActionPerformed

    private void btnLineasRectasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineasRectasActionPerformed
       herramientaActual = "lineasRectas";
    }//GEN-LAST:event_btnLineasRectasActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarLienzo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        exportarDibujo();
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshacerActionPerformed
        if (!deshacer.isEmpty()) {
        rehacer.add(clonarImagen(buffer));

        buffer = deshacer.remove(deshacer.size() - 1);
        actualizarLienzo();
    }
    }//GEN-LAST:event_btnDeshacerActionPerformed

    private void btnManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManualActionPerformed
        mostrarManual();
    }//GEN-LAST:event_btnManualActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        
       
    }//GEN-LAST:event_formMouseDragged

    private void panelLienzoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseDragged
    Graphics2D gVentana = (Graphics2D) panelLienzo.getGraphics();
    Graphics2D gBuffer = (Graphics2D) buffer.getGraphics();

    gVentana.setColor(colorActual);
    gBuffer.setColor(colorActual);

    gVentana.setStroke(new java.awt.BasicStroke(grosorPincel, java.awt.BasicStroke.CAP_ROUND, java.awt.BasicStroke.JOIN_ROUND));
    gBuffer.setStroke(new java.awt.BasicStroke(grosorPincel, java.awt.BasicStroke.CAP_ROUND, java.awt.BasicStroke.JOIN_ROUND));

    if ("dibujoLibre".equals(herramientaActual)) {
        if (anterior != null) {
            gVentana.drawLine(anterior.x, anterior.y, evt.getX(), evt.getY());
            gBuffer.drawLine(anterior.x, anterior.y, evt.getX(), evt.getY());
        }
        anterior = evt.getPoint();
    } else if ("aerografo".equals(herramientaActual)) {
        int radio = 15;
        int cantidad = 10;

        for (int i = 0; i < cantidad; i++) {
            int rx = random.nextInt(radio * 2 + 1) - radio;
            int ry = random.nextInt(radio * 2 + 1) - radio;
            int x = evt.getX() + rx;
            int y = evt.getY() + ry;

            if (x >= 0 && x < buffer.getWidth() && y >= 0 && y < buffer.getHeight()) {
                gVentana.fillRect(x, y, 1, 1);
                gBuffer.fillRect(x, y, 1, 1);
            }
        }
    }

    gVentana.dispose();
    gBuffer.dispose();
    }//GEN-LAST:event_panelLienzoMouseDragged

    private void panelLienzoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMousePressed
        startPoint = evt.getPoint();
        
        
        if ("clonarColor".equals(herramientaActual)) {
            int x = evt.getX();
            int y = evt.getY();
            if (x >= 0 && x < buffer.getWidth() && y >= 0 && y < buffer.getHeight()) {
                int rgb = buffer.getRGB(x, y);
                colorActual = new Color(rgb);
                JOptionPane.showMessageDialog(this, 
                    "Color clonado: " + colorActual, 
                    "Clonar Color", 
                    JOptionPane.INFORMATION_MESSAGE);
            }
            if ("dibujoLibre".equals(herramientaActual)) {
            anterior = evt.getPoint();
        }
        }
    }//GEN-LAST:event_panelLienzoMousePressed

    private void panelLienzoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseReleased
         if (startPoint != null) {
        Point endPoint = evt.getPoint();
        Graphics gVentana = panelLienzo.getGraphics();   
        Graphics gBuffer = buffer.getGraphics();          

        gVentana.setColor(colorActual);
        gBuffer.setColor(colorActual);

        if ("lineasRectas".equals(herramientaActual)) {
            gVentana.drawLine(startPoint.x, startPoint.y, endPoint.x, endPoint.y);
            gBuffer.drawLine(startPoint.x, startPoint.y, endPoint.x, endPoint.y);
        } 
        else if ("rectangulo".equals(herramientaActual)) {
            int x = Math.min(startPoint.x, endPoint.x);
            int y = Math.min(startPoint.y, endPoint.y);
            int w = Math.abs(endPoint.x - startPoint.x);
            int h = Math.abs(endPoint.y - startPoint.y);
            
            gVentana.fillRect(x, y, w, h);
            gBuffer.fillRect(x, y, w, h);
        }
        else if ("ovalo".equals(herramientaActual)) {
            int x = Math.min(startPoint.x, endPoint.x);
            int y = Math.min(startPoint.y, endPoint.y);
            int w = Math.abs(endPoint.x - startPoint.x);
            int h = Math.abs(endPoint.y - startPoint.y);
            
            gVentana.fillOval(x, y, w, h);
            gBuffer.fillOval(x, y, w, h);
        }

        guardarEstado();

        gVentana.dispose();
        gBuffer.dispose();
        startPoint = null;
    }
    
    anterior = null;
    }//GEN-LAST:event_panelLienzoMouseReleased

    private void panelLienzoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelLienzoMouseMoved
        lblPosicion.setText(evt.getX() + " | " + evt.getY());
    }//GEN-LAST:event_panelLienzoMouseMoved

    private void btnDibujoLibreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDibujoLibreMouseClicked

    }//GEN-LAST:event_btnDibujoLibreMouseClicked

    private void btnDibujoLibreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDibujoLibreMouseReleased
            if (evt.isPopupTrigger()) {
        TamañoPincelDialog dialog = new TamañoPincelDialog(this, true);
        dialog.setVisible(true);
        int nuevoGrosor = dialog.getTamañoSeleccionado();
        if (nuevoGrosor > 0) {
            grosorPincel = nuevoGrosor;
            System.out.println("Grosor actualizado a: " + grosorPincel); // Verifica en consola
        }
    }
    herramientaActual = "dibujoLibre";
    }//GEN-LAST:event_btnDibujoLibreMouseReleased

    private void salirAplicacion() {
    int respuesta = JOptionPane.showConfirmDialog(
        this, 
        "¿Deseas guardar el dibujo antes de salir?", 
        "Salir", 
        JOptionPane.YES_NO_OPTION
    );
    if(respuesta == JOptionPane.YES_OPTION){
        menuItemExportarActionPerformed(null);
    }
    System.exit(0); 
}
    
    private void limpiarLienzo() {
        if (buffer == null) {
            return;
        }
        
        Graphics g = buffer.getGraphics();
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, buffer.getWidth(), buffer.getHeight());
        g.dispose();
        
        
        panelLienzo.repaint();
    }
    
    private void exportarDibujo() {
        if (buffer == null) {
            JOptionPane.showMessageDialog(
                this, 
                "No hay dibujo para exportar.", 
                "Exportar", 
                JOptionPane.WARNING_MESSAGE
            );
            return;
        }
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showSaveDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            try {
                ImageIO.write(buffer, "png", archivo);
                JOptionPane.showMessageDialog(this, 
                    "¡Dibujo guardado correctamente!", 
                    "Exportar", 
                    JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, 
                    "Error al guardar: " + e.getMessage(), 
                    "Exportar", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void mostrarManual() {
        JOptionPane.showMessageDialog(this, 
            "Manual de uso:\n\n"
            + "1. Selecciona la herramienta en la barra lateral.\n"
            + "2. Haz clic y arrastra sobre el lienzo para dibujar.\n"
            + "3. Usa Menú Archivo -> Nuevo para limpiar, Exportar para guardar.\n"
            + "...",
            "Manual",
            JOptionPane.INFORMATION_MESSAGE
        );
    }
    
    private void guardarEstado() {
    BufferedImage copiaBuffer = new BufferedImage(buffer.getWidth(), buffer.getHeight(), buffer.getType());
    Graphics g = copiaBuffer.getGraphics();
    g.drawImage(buffer, 0, 0, null);
    g.dispose();

    deshacer.add(copiaBuffer);

    rehacer.clear();
}
    
    
    private BufferedImage clonarImagen(BufferedImage imagen) {
        BufferedImage copia = new BufferedImage(imagen.getWidth(), imagen.getHeight(), imagen.getType());
        Graphics g = copia.getGraphics();
        g.drawImage(imagen, 0, 0, null);
        g.dispose();
        return copia;
    }

    private void actualizarLienzo() {
    Graphics g = panelLienzo.getGraphics();
    g.drawImage(buffer, 0, 0, null);
    g.dispose();
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new paint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAerografo;
    private javax.swing.JButton btnClonarColor;
    private javax.swing.JButton btnCuadrado;
    private javax.swing.JButton btnDeshacer;
    private javax.swing.JButton btnDibujoLibre;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnLineasRectas;
    private javax.swing.JButton btnManual;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnOvalo;
    private javax.swing.JButton btnSeleccColor;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuEdicion;
    private javax.swing.JToolBar jToolBar;
    private javax.swing.JLabel lblPosicion;
    private javax.swing.JMenuItem menuItemAcercade;
    private javax.swing.JMenuItem menuItemDeshacer;
    private javax.swing.JMenuItem menuItemExportar;
    private javax.swing.JMenuItem menuItemManual;
    private javax.swing.JMenuItem menuItemNuevo;
    private javax.swing.JMenuItem menuItemRehacer;
    private javax.swing.JMenuItem menuItemSalir;
    private javax.swing.JPanel panelHerramientas;
    private javax.swing.JPanel panelLienzo;
    private javax.swing.JPopupMenu popUpTamañoPincel;
    // End of variables declaration//GEN-END:variables
}
