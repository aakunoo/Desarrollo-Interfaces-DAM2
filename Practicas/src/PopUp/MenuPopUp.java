/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PopUp;

import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manana
 */
public class MenuPopUp extends javax.swing.JFrame {

    private Point puntoPopUp;
    /**
     * Creates new form MenuPopUp
     */
    public MenuPopUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenu = new javax.swing.JPopupMenu();
        menuItemEliminar = new javax.swing.JMenuItem();
        menuItemExportar = new javax.swing.JMenuItem();
        menuItemSelectAll = new javax.swing.JMenuItem();
        menuPulsar = new javax.swing.JMenuItem();
        menuCopiar = new javax.swing.JMenuItem();
        menuInsertar = new javax.swing.JMenuItem();
        InsertarFilaVacia = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        menuItemEliminar.setText("Eliminar seleccionado");
        menuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEliminarActionPerformed(evt);
            }
        });
        popUpMenu.add(menuItemEliminar);

        menuItemExportar.setText("Exportar");
        menuItemExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExportarActionPerformed(evt);
            }
        });
        popUpMenu.add(menuItemExportar);

        menuItemSelectAll.setText("Seleccionar todo");
        menuItemSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSelectAllActionPerformed(evt);
            }
        });
        popUpMenu.add(menuItemSelectAll);

        menuPulsar.setText("Mostrar donde se pulsa");
        menuPulsar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPulsarActionPerformed(evt);
            }
        });
        popUpMenu.add(menuPulsar);

        menuCopiar.setText("Copiar");
        menuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCopiarActionPerformed(evt);
            }
        });
        popUpMenu.add(menuCopiar);

        menuInsertar.setText("Insertar nueva fila");
        menuInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInsertarActionPerformed(evt);
            }
        });
        popUpMenu.add(menuInsertar);

        InsertarFilaVacia.setText("Insertar Fila Vacia");
        InsertarFilaVacia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarFilaVaciaActionPerformed(evt);
            }
        });
        popUpMenu.add(InsertarFilaVacia);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Lakers", "3", "1", "0"},
                {"Chigago Bulls", "2", "2", "0"},
                {"Celtics", "4", "0", "0"},
                {"Nick", "1", "3", "0"},
                {"Warriors", "1", "3", "0"}
            },
            new String [] {
                "Equipos", "Partidos Ganados", "Partidos Perdidos", "Partidos Empatados"
            }
        ));
        tabla.setComponentPopupMenu(popUpMenu);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEliminarActionPerformed
        
        int [] filas = tabla.getSelectedRows();
        
        if(filas.length>0){
            for(int i = filas.length-1; i>=0; i--){
            
            ((DefaultTableModel)tabla.getModel()).removeRow(filas[i]);
            }
        }
    }//GEN-LAST:event_menuItemEliminarActionPerformed

    private void menuItemExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExportarActionPerformed
       
        int[] filas = tabla.getSelectedRows();
    if (filas.length > 0) {
        StringBuilder datosExportados = new StringBuilder();
        for (int fila : filas) {
            for (int columna = 0; columna < tabla.getColumnCount(); columna++) {
                datosExportados.append(tabla.getValueAt(fila, columna)).append("\t");
            }
            datosExportados.append("\n");
        }

        try {
            FileWriter escritor = new FileWriter("datos_exportados.txt");
            escritor.write(datosExportados.toString());
            escritor.close();
            JOptionPane.showMessageDialog(this, "Datos exportados correctamente a 'datos_exportados.txt'.", "Exportación exitosa", JOptionPane.INFORMATION_MESSAGE);
        } catch (java.io.IOException e) {
            JOptionPane.showMessageDialog(this, "Error al exportar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay filas seleccionadas para exportar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
        
        
    }//GEN-LAST:event_menuItemExportarActionPerformed

    private void tablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseReleased
       
        // para saber exactamente en que fila pulsa el usuario.
       
        //if(evt.isPopupTrigger()){ // esto quiere decir que sólo va a ir si es pulsado el 3 boton del raton. (click derecho)
            puntoPopUp = evt.getPoint(); // para obtener punto pulsado
            
        //}
        
    }//GEN-LAST:event_tablaMouseReleased

    private void menuPulsarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPulsarActionPerformed
        
        JOptionPane.showMessageDialog(this, "Ha pulsado sobre el punto\n" + "X: " + puntoPopUp.getX() + 
                "\n" + "Y: " + puntoPopUp.getY() + "\n" + "Fila: " + tabla.rowAtPoint(puntoPopUp) + "\n" + "Columna: " + tabla.columnAtPoint(puntoPopUp));
        
    }//GEN-LAST:event_menuPulsarActionPerformed

    private void menuItemSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSelectAllActionPerformed
        
        tabla.selectAll();
        
    }//GEN-LAST:event_menuItemSelectAllActionPerformed

    private void menuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCopiarActionPerformed
    int[] filas = tabla.getSelectedRows();
    
    if (filas.length > 0) {

        StringBuilder contenido = new StringBuilder();
        
        for (int fila : filas) {
            for (int columna = 0; columna < tabla.getColumnCount(); columna++) {
                Object valorCelda = tabla.getValueAt(fila, columna);
                if (valorCelda != null) {
                    contenido.append(valorCelda.toString());
                }
                if (columna < tabla.getColumnCount() - 1) {
                    contenido.append("\t");
                }
            }
            contenido.append("\n");
        }  
        StringSelection ss = new StringSelection(contenido.toString());
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
        
        JOptionPane.showMessageDialog(this, "Datos copiados al portapapeles.", 
            "Copiado", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No hay filas seleccionadas para copiar.", 
            "Advertencia", JOptionPane.WARNING_MESSAGE);
    }  
    }//GEN-LAST:event_menuCopiarActionPerformed

    private void menuInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInsertarActionPerformed
        
       String lineaAnnadida = (String)JOptionPane.showInputDialog(this, "Añade en formato a,1,2,3");
       String [] array = lineaAnnadida.split(",");
      
       ((DefaultTableModel)tabla.getModel()).insertRow(tabla.rowAtPoint(puntoPopUp), new Object[]{array[0], array[1], array[2], array[3]});
        
    }//GEN-LAST:event_menuInsertarActionPerformed

    private void InsertarFilaVaciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarFilaVaciaActionPerformed
        int filaSeleccionada = tabla.rowAtPoint(puntoPopUp);
    
    if (filaSeleccionada != -1) { // Comprobar si hay una fila válida seleccionada
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.insertRow(filaSeleccionada + 1, new Object[tabla.getColumnCount()]);
    } else {
        JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna fila.", 
            "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_InsertarFilaVaciaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPopUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem InsertarFilaVacia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuCopiar;
    private javax.swing.JMenuItem menuInsertar;
    private javax.swing.JMenuItem menuItemEliminar;
    private javax.swing.JMenuItem menuItemExportar;
    private javax.swing.JMenuItem menuItemSelectAll;
    private javax.swing.JMenuItem menuPulsar;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
